% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_gpt_fit.R
\name{predict.gpt_fit}
\alias{predict.gpt_fit}
\title{Prediction for GPT Models}
\usage{
\method{predict}{gpt_fit}(object, cat = TRUE, dens = FALSE, group,
  dim = 1, quantiles = c(0.1, 0.3, 0.5, 0.7, 0.9), prec = 500, ...)
}
\arguments{
\item{object}{GPT model fitted by \code{\link{gpt_fit}}}

\item{cat}{if \code{FALSE} computes expected probabilities and conditional densities for the hidden MPT branches (and not for the observable MPT categories)}

\item{dens}{if \code{TRUE}, returns conditional densities (instead of quantiles) for each category/branch}

\item{group}{select group by an index, e.g., \code{group=1} (if mutliple groups were fitted)}

\item{dim}{only for multivariate continuous data: dimension for prediction}

\item{quantiles}{which quantiles to predict}

\item{prec}{number of evaluations of the GPT density to compute conditional means/quantiles for the latent distributions}

\item{...}{ignored}
}
\description{
Computes expected category/branch probabilities and the corresponding conditional means and quantiles/densities for the continuous latent distributions.
}
\examples{
\dontrun{
# generate data
n <- c(targets=75, lures=75)     # number of items
theta <- c(do=.6,dn=.4, g=.5)          # MPT parameters
eta <- c(mu=400, sig=50, lambda_do=300, 
         lambda_go=500, lambda_gn=500, 
         lambda_dn=300)          # exGaussian parameters
file <- paste0(path.package("gpt"), "/models/2htm_exgauss.txt")
gen <- gpt_gen(n=n, theta=theta, eta=eta, latent="exgauss", file=file)

# fit GPT
fit <- gpt_fit(x=gen$x, y=gen$y, latent="exgauss", file=file, 
               restrictions=list("do=dn", "lambda_do=lambda_dn", 
                                 "lambda_go=lambda_gn"))
                                 
# Predictions for MPT categories:
predict(fit)

# Predictions for MPT branches:
p <- predict(fit, cat=FALSE, dens=TRUE)
yy <- as.numeric(colnames(p[,-(1:4)]))
plot(yy, p[1,-(1:4)], main="2HTM", type="l")
lines(yy, p[3,-(1:4)], col=2)
legend("topright", col=1:2, lty=1, c("Detect","Guess"))
}
}
